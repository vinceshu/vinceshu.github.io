{"meta":{"title":"Hexo","subtitle":"","description":"","author":"John Doe","url":"http://yoursite.com","root":"/"},"pages":[{"title":"404 Not Found：该页无法显示","date":"2020-07-24T14:13:04.240Z","updated":"2019-08-01T11:17:12.000Z","comments":false,"path":"/404.html","permalink":"http://yoursite.com/404.html","excerpt":"","text":""},{"title":"关于","date":"2020-07-25T10:58:32.843Z","updated":"2020-07-25T10:58:32.843Z","comments":false,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":"一个即将步入社会的新人，将从事java开发相关工作，少掉头发，努力搞钱。1234567891011121314151617181920212223&#123; name: 'vinceshu' age: '21', gender: '男', profession: 'Java Developer &amp; Designer', experience: 'null', address: '广东省深圳市', education: '本科', github: 'https://github.com/vinceshu', blog: 'http://vinceshu.gitee.io', email: 'vinceshu@163.com', description: '我只想搞钱', skills: [ ['Java', 'Mysql', 'redis', 'JVM', 'Vue.js', 'Navicat'], ['Spring', 'SpringMvc', 'Mybatis', 'SpringBoot'], ['SpringCloud','Nginx','RabbitMQ','Docker', 'FastDFS'], ['IDEA', 'Maven', 'Git', 'SVN'], ['HTML', 'CSS', 'Jquery', 'Vue,js', 'Thymeleaf'], ['tomcat', 'jetty', 'linux'], ]&#125;"},{"title":"分类","date":"2020-07-24T14:13:04.250Z","updated":"2019-08-01T11:17:12.000Z","comments":false,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2020-07-25T09:00:46.006Z","updated":"2019-08-01T11:17:12.000Z","comments":true,"path":"links/index.html","permalink":"http://yoursite.com/links/index.html","excerpt":"","text":""},{"title":"书单","date":"2020-07-24T14:13:04.248Z","updated":"2019-08-01T11:17:12.000Z","comments":false,"path":"books/index.html","permalink":"http://yoursite.com/books/index.html","excerpt":"","text":""},{"title":"标签","date":"2020-07-24T14:13:04.253Z","updated":"2019-08-01T11:17:12.000Z","comments":false,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""},{"title":"Repositories","date":"2020-07-24T14:13:04.252Z","updated":"2019-08-01T11:17:12.000Z","comments":false,"path":"repository/index.html","permalink":"http://yoursite.com/repository/index.html","excerpt":"","text":""}],"posts":[{"title":"java基础-第二天","slug":"java-two","date":"2020-07-24T14:54:02.696Z","updated":"2020-07-24T11:27:17.100Z","comments":true,"path":"2020/07/24/java-two/","link":"","permalink":"http://yoursite.com/2020/07/24/java-two/","excerpt":"","text":"1，JVM,JRE,JDK的作用与区别；jvm也就是我们常说的虚拟机，他是java跨平台的的核心部分，java源程序可以编译为class文件，可以在java虚拟机上执行，所以说java是通过虚拟机与操作系统交互。JRE是java runtime enviroment运行时环境，他包括jvm虚拟机，库函数，还有一些运行程序必需的文件JDK是java开发工具包，包含jre，以及增加编译器和调试器等程序开发文件。 2，Java中8种基本数据类型有哪些，它们占用的字节数分别是多少；int4short2long8byte1char2double8float4boolean1或4 3，接口与抽象类的区别；不同点：1，接口是对类的行为的抽象，抽象类是对一些类的共有属性的抽取。2，接口是用interface定义，抽象类是用abstract定义3，接口没有构造方法，抽象方法可以有构造方法4，接口可以通过多实现来实现多继承，抽象类只能单继承相同点：1，他们不能创建对象，他们只能通过继承或实现他们的类来实例化2，继承和实现了他们的类必须实现他们的抽象方法 4，创建线程有几种方法，它们的优缺点分别是什么；1.继承Thread类 2.实现Runnable接口3.实现Callable接口 4.线程池方式优缺点1.继承Thread类优点 、代码简单 。 缺点 、该类无法继承别的类。2.实现Runnable接口优点 、继承其他类。 同一实现该接口的实例可以共享资源。缺点 、代码复杂，不能抛出异常3.实现Callable优点 、可以获得异步任务的返回值4.线程池 、实现自动化装配，易于管理，循环利用资源。 5，.加载类的方式有哪些；类加载分为静态加载和动态加载，动态加载就是从外储存器加载类，静态加载本质上是从内存中创建类的实例对象，此时类已经被加载到内存中。1，由new关键字创建2，Class.forName(全限定性类名)3，ClassLoader.LoadClass(“类名”)第一种是静态加载，后两种是动态加载前两种是用当前类加载器，后一种是自定义类加载器 6，class.forName加载类与classloader加载类有什么区别；Class的装载包括3个步骤：加载（loading）,连接（link）,初始化（initialize）.Class.forName(className)实际上是调用Class.forName(className, true, this.getClass().getClassLoader())。第二个参数，是指Class被loading后是不是必须被初始化，也就是静态属性，代码块的执行。ClassLoader.loadClass(className)实际上调用的是ClassLoader.loadClass(name, false)，第二个参数指Class是否被link。Class.forName(className)装载的class已经被初始化，而ClassLoader.loadClass(className)装载的class还没有被link。一般情况下，这两个方法效果一样，都能装载Class。但如果程序依赖于Class是否被初始化，就必须用Class.forName(name)了。 7，说一下进程与线程的区别；1，进程是资源分配的最小单位，线程是程序执行的最小单位2，进程有独立的代码和数据空间，进程切换会有较大的开销，同一类线程有共同的代码和数据空间，线程切换开销不大。3，系统在运行的时候会为每个进程分配不同的内存空间；而对线程而言，除了CPU外，系统不会为线程分配内存4，在操作系统中能同时运行多个进程（程序）；而在同一个进程（程序）中有多个线程同时执行（通过CPU调度，在每个时间片中只有一个线程执行）5，一个程序至少有一个进程；一个进程至少有一个线程","categories":[{"name":"java","slug":"java","permalink":"http://yoursite.com/categories/java/"}],"tags":[{"name":"java","slug":"java","permalink":"http://yoursite.com/tags/java/"}]},{"title":"Hello World","slug":"hello-world","date":"2020-07-24T14:04:49.517Z","updated":"2020-07-24T14:04:49.517Z","comments":true,"path":"2020/07/24/hello-world/","link":"","permalink":"http://yoursite.com/2020/07/24/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick Start Create a new post1$ hexo new \"My New Post\"More info: Writing Run server1$ hexo serverMore info: Server Generate static files1$ hexo generateMore info: Generating Deploy to remote sites1$ hexo deployMore info: Deployment","categories":[],"tags":[]},{"title":"java基础-第一天","slug":"java-one","date":"2020-07-21T08:56:18.000Z","updated":"2020-07-24T11:27:13.158Z","comments":true,"path":"2020/07/21/java-one/","link":"","permalink":"http://yoursite.com/2020/07/21/java-one/","excerpt":"","text":"语言特性 12 Q1：Java 语言的优点？① 平台无关性，摆脱硬件束缚，“一次编写，到处运行”。② 相对安全的内存管理和访问机制，避免大部分内存泄漏和指针越界。③ 热点代码检测和运行时编译及优化，使程序随运行时间增长获得更高性能。④ 完善的应用程序接口，支持第三方类库。 Q2：Java 如何实现平台无关？JVM： Java 编译器可生成与计算机体系结构无关的字节码指令，字节码文件不仅可以轻易地在任何机器上解释执行，还可以动态地转换成本地机器代码，转换是由 JVM 实现的，JVM 是平台相关的，屏蔽了不同操作系统的差异。语言规范： 基本数据类型大小有明确规定，例如 int 永远为 32 位，而 C/C++ 中可能是 16 位、32 位，也可能是编译器开发商指定的其他大小。Java 中数值类型有固定字节数，二进制数据以固定格式存储和传输，字符串采用标准的 Unicode 格式存储。 Q3：JDK 和 JRE 的区别？JDK： Java Development Kit，开发工具包。提供了编译运行 Java 程序的各种工具，包括编译器、JRE 及常用类库，是 JAVA 核心。JRE： Java Runtime Environment，运行时环境，运行 Java 程序的必要环境，包括 JVM、核心类库、核心配置工具。 Q4：Java 按值调用还是引用调用？按值调用指方法接收调用者提供的值，按引用调用指方法接收调用者提供的变量地址。Java 总是按值调用，方法得到的是所有参数值的副本，传递对象时实际上方法接收的是对象引用的副本。方法不能修改基本数据类型的参数，如果传递了一个 int 值 ，改变值不会影响实参，因为改变的是值的一个副本。可以改变对象参数的状态，但不能让对象参数引用一个新的对象。如果传递了一个 int 数组，改变数组的内容会影响实参，而改变这个参数的引用并不会让实参引用新的数组对象。 Q5：浅拷贝和深拷贝的区别？浅拷贝： 只复制当前对象的基本数据类型及引用变量，没有复制引用变量指向的实际对象。修改克隆对象可能影响原对象，不安全。深拷贝： 完全拷贝基本数据类型和引用数据类型，安全。 Q6：什么是反射？在运行状态中，对于任意一个类都能知道它的所有属性和方法，对于任意一个对象都能调用它的任意方法和属性，这种动态获取信息及调用对象方法的功能称为反射。缺点是破坏了封装性以及泛型约束。反射是框架的核心，Spring 大量使用反射。 Q7：Class 类的作用？如何获取一个 Class 对象？在程序运行期间，Java 运行时系统为所有对象维护一个运行时类型标识，这个信息会跟踪每个对象所属的类，虚拟机利用运行时类型信息选择要执行的正确方法，保存这些信息的类就是 Class，这是一个泛型类。简单来说就是Class是一个保存了运行时信息的一个类，运行信息可以知道每个对象属于哪个类，jvm利用运行时信息选择相应的方法执行。获取 Class 对象：① 类名.class 。②对象的 getClass方法。③ Class.forName(类的全限定名)。 Q8：什么是注解？什么是元注解？注解是一种标记，使类或接口附加额外信息，帮助编译器和 JVM 完成一些特定功能，例如 @Override 标识一个方法是重写方法。元注解是自定义注解的注解，例如：@Target：约束作用位置，值是 ElementType 枚举常量，包括 METHOD 方法、VARIABLE 变量、TYPE 类/接口、PARAMETER 方法参数、CONSTRUCTORS 构造方法和 LOACL_VARIABLE 局部变量等。@Rentention：约束生命周期，值是 RetentionPolicy 枚举常量，包括 SOURCE 源码、CLASS 字节码和 RUNTIME 运行时。@Documented：表明这个注解应该被 javadoc 记录。 Q9：什么是泛型，有什么作用？泛型本质是参数化类型，解决不确定对象具体类型的问题。泛型在定义处只具备执行 Object 方法的能力。泛型的好处：① 类型安全，放置什么出来就是什么，不存在 ClassCastException。② 提升可读性，编码阶段就显式知道泛型集合、泛型方法等处理的对象类型。③ 代码重用，合并了同类型的处理代码。 Q10：泛型擦除是什么？泛型用于编译阶段，编译后的字节码文件不包含泛型类型信息，因为虚拟机没有泛型类型对象，所有对象都属于普通类。例如定义 List 或 List，在编译后都会变成 List 。定义一个泛型类型，会自动提供一个对应原始类型，类型变量会被擦除。如果没有限定类型就会替换为 Object，如果有限定类型就会替换为第一个限定类型，例如 `` 会使用 A 类型替换 T。 Q11：JDK8 新特性有哪些？**lambda 表达式：**允许把函数作为参数传递到方法，简化匿名内部类代码。**函数式接口：**使用 @FunctionalInterface 标识，有且仅有一个抽象方法，可被隐式转换为 lambda 表达式。**方法引用：**可以引用已有类或对象的方法和构造方法，进一步简化 lambda 表达式。**接口：**接口可以定义 default 修饰的默认方法，降低了接口升级的复杂性，还可以定义静态方法。**注解：**引入重复注解机制，相同注解在同地方可以声明多次。注解作用范围也进行了扩展，可作用于局部变量、泛型、方法异常等。**类型推测：**加强了类型推测机制，使代码更加简洁。**Optional 类：**处理空指针异常，提高代码可读性。**Stream 类：**引入函数式编程风格，提供了很多功能，使代码更加简洁。方法包括 forEach 遍历、count 统计个数、filter 按条件过滤、limit 取前 n 个元素、skip 跳过前 n 个元素、map 映射加工、concat 合并 stream 流等。**日期：**增强了日期和时间 API，新的 java.time 包主要包含了处理日期、时间、日期/时间、时区、时刻和时钟等操作。**JavaScript：**提供了一个新的 JavaScript 引擎，允许在 JVM上运行特定 JavaScript 应用。 Q12：异常有哪些分类？所有异常都是 Throwable 的子类，分为 Error 和 Exception。Error 是 Java 运行时系统的内部错误和资源耗尽错误，例如 StackOverFlowError 和 OutOfMemoryError，这种异常程序无法处理。Exception 分为受检异常和非受检异常，受检异常需要在代码中显式处理，否则会编译出错，非受检异常是运行时异常，继承自 RuntimeException。受检异常：① 无能为力型，如字段超长导致的 SQLException。② 力所能及型，如未授权异常 UnAuthorizedException，程序可跳转权限申请页面。常见受检异常还有 FileNotFoundException、ClassNotFoundException、IOException等。非受检异常：① 可预测异常，例如 IndexOutOfBoundsException、NullPointerException、ClassCastException 等，这类异常应该提前处理。② 需捕捉异常，例如进行 RPC 调用时的远程服务超时，这类异常客户端必须显式处理。③ 可透出异常，指框架或系统产生的且会自行处理的异常，例如 Spring 的 NoSuchRequestHandingMethodException，Spring 会自动完成异常处理，将异常自动映射到合适的状态码。","categories":[{"name":"java","slug":"java","permalink":"http://yoursite.com/categories/java/"}],"tags":[{"name":"java","slug":"java","permalink":"http://yoursite.com/tags/java/"}]}],"categories":[{"name":"java","slug":"java","permalink":"http://yoursite.com/categories/java/"}],"tags":[{"name":"java","slug":"java","permalink":"http://yoursite.com/tags/java/"}]}